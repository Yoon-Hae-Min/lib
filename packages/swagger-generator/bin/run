#!/usr/bin/env node

const yargs = require('yargs');
const { hideBin } = require('yargs/helpers');

const { runZod } = require('../lib/index');
const { runSwagger } = require('../lib/index');

async function main() {
  const argv = await yargs(hideBin(process.argv))
    .option('id', {
      describe: 'ID for Basic Auth',
      type: 'string',
      demandOption: false,
    })
    .option('password', {
      describe: 'Password for Basic Auth',
      type: 'string',
      demandOption: false,
    })
    .option('url', {
      describe: 'URL of the OpenAPI specification',
      type: 'string',
      demandOption: true,
    })
    .option('output', {
      describe: 'Output directory for the generated API client',
      type: 'string',
      demandOption: true,
    })
    .option('skipZodGeneration', {
      describe: 'Generate Zod schema from TypeScript types',
      type: 'boolean',
      default: false,
    })
    .option('applyZodSchemaInAPI', {
      describe: 'Apply generated Zod schema in the API',
      type: 'boolean',
      default: true,
    }).argv;

  await runSwagger({
    id: argv.id,
    password: argv.password,
    url: argv.url,
    output: argv.output,
    applyZodSchemaInAPI: argv.applyZodSchemaInAPI,
  });

  !argv.skipZodGeneration &&
    runZod({
      input: argv.output,
      output: argv.output,
    });
}

main();
